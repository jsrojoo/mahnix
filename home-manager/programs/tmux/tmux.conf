# remap prefix from 'C-b' to 'C-t'
unbind C-b
unbind '"'
unbind %
unbind M-Left
unbind M-Right
unbind M-Down
unbind M-Up

# ## mac terminal notify
# set-option -g default-command "reattach-to-user-namespace -l zsh"

# set-option -g prefix M-a
set-option -g prefix C-a
# mouse behavior
setw -g mouse on

# stop renaming window
set -g allow-rename off
set -g automatic-rename off

set -s escape-time 0

# Start numbering at 0
# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# set -g default-terminal "xterm"
set-option -sa terminal-overrides ',screen-256color:RGB'
# set -g default-terminal "tmux-256color"

# status section
set -g status-right ' #S ' # session name
set -g status-left ''

set-option -g status-style 'fg=#dddddd,bg=#2d2d2d'
set-option -g pane-active-border-style 'fg=#ffffff,bg=#ffffff'
set-option -g pane-border-style 'fg=#2d2d2d,bg=#2d2d2d'
set-window-option -g window-status-format '#[fg=#dddddd,bg=#dddddd]#[fg=#dddddd,bg=#2d2d2d] #W#{?window_zoomed_flag,*Z,} #[default]'
set-window-option -g window-status-current-format '#[fg=#2d2d2d,bg=#dddddd]#[fg=#2d2d2d,bg=#dddddd] #W#{?window_zoomed_flag,*Z,} #[default]'
set-window-option -g mode-keys vi

# bind-key M-a send-prefix
bind-key C-a send-prefix
# reload config file (change file location to your the tmux.conf you want to use)
bind R source-file ~/.tmux.conf

# window list to be collapsed by default
# bind-key M-a choose-tree -Zs
bind-key C-a choose-tree -Zs

# split panes using v and s
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# also remove this in vim-tmux-navigator/plugin/tmux_navigator.vim
# bind-key -n M-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi M-\\ select-pane -l
# More Vim-like
bind-key  Space    copy-mode
bind-key  -T       copy-mode-vi  v    send  -X  begin-selection
bind-key  -T       copy-mode-vi  c-v  send  -X  rectangle-toggle
bind-key  -T       copy-mode-vi  y    send  -X  copy-selection-and-cancel
#         Colemak  Keys
bind-key  -T       copy-mode-vi  j    send  -X  cursor-down
bind-key  -T       copy-mode-vi  k    send  -X  cursor-up
bind-key  -T       copy-mode-vi  l    send  -X  cursor-right
# bind-key  -T       copy-mode-vi  k    send  -X  search-again
# bind-key  -T       copy-mode-vi  K    send  -X  search-reverse
bind-key  -T       copy-mode-vi  u    send  -X  halfpage-up
bind-key  -T       copy-mode-vi  d    send  -X  halfpage-down

bind c new-window -c "#{pane_current_path}"
# switch windows alt+number
bind-key -n C-1 select-window -t 1
bind-key -n C-2 select-window -t 2
bind-key -n C-3 select-window -t 3
bind-key -n C-4 select-window -t 4
bind-key -n C-5 select-window -t 5
bind-key -n C-6 select-window -t 6
bind-key -n C-7 select-window -t 7
bind-key -n C-8 select-window -t 8
bind-key -n C-9 select-window -t 9
bind-key -n C-0 select-window -t 0

# Automatically copy tmux selection to X clipboard
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# display line numbers in copy mode
bind-key -T copy-mode-vi = split-window -h -p 90 'seq 24 -1 1;sleep 15'\; swap-pane -dU

# # List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
#
# # Other examples:
# # set -g @plugin 'github_username/plugin_name'
# # set -g @plugin 'git@github.com/user/plugin'
# # set -g @plugin 'git@bitbucket.com/user/plugin'
# # set -g @plugin 'jsrojoo/tmux-onedark-theme'
# # set -g @plugin 'dracula/tmux'
# # set -g @plugin 'jsrojoo/tmux-tomorrow'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @plugin 'tmux-plugins/tmux-continuum'
#
# # for vim
# # for neovim
# set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-strategy-nvim 'session'
#
# set -g @continuum-restore 'on'
# # Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run -b '~/.tmux/plugins/tpm/tpm'

